套接字简单理解就是ip+port
osi七层:
应用层 表示层 会话层 传输层(tcp udp) 网络层(ip) 数据链路层(mac) 物理层(传输介质,比特流)

tcp/ip四层:应用层 传输层 网络层 数据链路层

ip 路由寻址 网络标识符
port 传输层 tcp或者udp端口等等
四层中除了应用层,其余的都是内核空间
层层封装,每一层都加上相应的报头,最后处理成比特流 0101010101010101
ip 逻辑地址 mac 物理地址,src dst的ip mac组合即可完成一个数据报文,并不是所有的通信都要传输层,比如ping就是网络ip和mac

ip network_id host_id   ip+netmask确定网段  连续为1的是network_id  掩码其实就是控制多少位为1不改变,后边的计算主机数目
掩码32,通过掩码来划分网段,拿个主机id的前一个来做网段,主机数目减少一半
2的01234567 2的7次方128



VLSM可变长子网掩码
CIDR无类别域间路由
route summary路由汇聚

mac 48比特位
物理mac标志一个唯一的终端,全球唯一的硬件地址
全1 FF-FF-FF-FF-FF-FF 广播地址



二层交换机理解成处理同一个网段,src_ip dst_ip src_mac arp广播获取dst_ip对应的dst_mac

LAN 局域网

掩码都是24 也就是前面三位是network_id
192.168.1.100 192.168.2.100  不同网段,那么这时候通信就不能简单的通过交换机,而是要有路由器,逐个网段发送
配置主机的路由器,或者说网关,首先自己能通信,也就是同一个网段
不管是交换机还是路由器,数据包能发送都得要有src_dst_ip src_dst_mac
如果路由器不清楚目标mac那也就不能组成完整的数据包
基本上src_dst_ip数据包转发过程中不会发生变化,但是src_dst_mac每一跳都会改变(典型的三层转发,没有nat的场景下)
如果路由表中没有相应网段的路由,或者default路由,那么就把这个包丢弃掉
mac地址其实重复也行,比如通信端点的mac一样,但是不同网段,除了路由器mac就发生变化了,并不影响通信,所有mac是本地有效的概念